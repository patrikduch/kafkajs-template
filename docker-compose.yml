version: "3"

services:
  zookeeper:
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "YES"
    image: 'wurstmeister/zookeeper'
    ports:
      - '2181:2181'
  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "test-topic"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  postgres:
    container_name: postgres_db
    image: postgres:13.1
    restart: always
    #environment:
    #  - POSTGRES_USER=root
    #  - POSTGRES_PASSWORD=root
    #env_file: ./env/postgres.env
    env_file:
      - ./env/dbs/postgres.env
    ports:
      - 5432:5432
    volumes:
      # - postgres_volume:/var/lib/postgresql
      - ./dbs/postgres/init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql

  adminer:
    container_name: adminer_dashboard
    image: adminer
    restart: always
    ports:
      - 8080:8080
  nest:
    container_name: nest_app
    depends_on:
      - postgres
    build: .
    volumes:
      - .:/nest
    ports:
      - 3000:3000
      - 9229:9229
    tty: true
